"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74173],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},19537:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=t(87462),i=t(63366),a=(t(67294),t(3905)),o=["components"],s={},l="Spine skeletal animation",p={unversionedId:"tutorials/spineAnimation",id:"tutorials/spineAnimation",isDocsHomePage:!1,title:"Spine skeletal animation",description:"Spine is a 2D animation software tailored specifically for software and game developers. Animators, original artists, and engineers work together to give life to your game. Using Spine skeletal animation can achieve some richer effects, which can better reduce memory usage compared to sprite animation. Spine is a paid software, please use it after purchase, Spine official website//zh.esotericsoftware.com/. The currently supported Spine version is: 3.6 / 3.8 / 4.0, you can click here see how to set",source:"@site/docs/tutorials/spineAnimation.md",sourceDirName:"tutorials",slug:"/tutorials/spineAnimation",permalink:"/docs/tutorials/spineAnimation",editUrl:"https://github.com/eva-engine/eva-engine.github.io/tree/master/docs/tutorials/spineAnimation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sprite animation",permalink:"/docs/tutorials/spriteAnimation"},next:{title:"Dragonbones \u9f99\u9aa8\u52a8\u753b",permalink:"/docs/tutorials/dragonboneAnimation"}},c=[{value:"Install",id:"install",children:[{value:"With NPM",id:"with-npm",children:[],level:3},{value:"In Browser",id:"in-browser",children:[],level:3}],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"Options",id:"options",children:[{value:"resource <code>string</code>",id:"resource-string",children:[],level:3},{value:"animationName <code>string</code>",id:"animationname-string",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"play(name?: string, loop?: boolean)",id:"playname-string-loop-boolean",children:[],level:3},{value:"stop()",id:"stop",children:[],level:3}],level:2}],m={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"spine-skeletal-animation"},"Spine skeletal animation"),(0,a.kt)("p",null,"Spine is a 2D animation software tailored specifically for software and game developers. Animators, original artists, and engineers work together to give life to your game. Using Spine skeletal animation can achieve some richer effects, which can better reduce memory usage compared to sprite animation. Spine is a paid software, please use it after purchase, Spine official website: ",(0,a.kt)("a",{parentName:"p",href:"http://zh.esotericsoftware.com/"},"http://zh.esotericsoftware.com/"),". The currently supported Spine version is: 3.6 / 3.8 / 4.0, you can click here ",(0,a.kt)("a",{parentName:"p",href:"http://esotericsoftware.com/spine-settings"},"see how to set")),(0,a.kt)("p",null,"-",(0,a.kt)("a",{parentName:"p",href:"https://eva.js.org/playground/#/spine"},"https://eva.js.org/playground/#/spine")),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("p",null,"The currently supported Spine version is: 3.6 / 3.8 / 4.0,\nYou can select npm package by version."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"3.6 ",(0,a.kt)("inlineCode",{parentName:"li"},"@eva/plugin-renderer-spine")),(0,a.kt)("li",{parentName:"ul"},"3.8 ",(0,a.kt)("inlineCode",{parentName:"li"},"@eva/plugin-renderer-spine38")),(0,a.kt)("li",{parentName:"ul"},"4.0 ",(0,a.kt)("inlineCode",{parentName:"li"},"@eva/plugin-renderer-spine40"))),(0,a.kt)("h3",{id:"with-npm"},"With NPM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @eva/plugin-renderer @eva/plugin-renderer-spine40\n")),(0,a.kt)("h3",{id:"in-browser"},"In Browser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/@eva/plugin-renderer-spine@1.2.x/dist/EVA.plugin.renderer.spine.min.js"><\/script>\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {Game, GameObject, resource, RESOURCE_TYPE} from '@eva/eva.js'\nimport {RendererSystem} from '@eva/plugin-renderer'\nimport {Spine, SpineSystem} from '@eva/plugin-renderer-spine'\n\nresource.addResource([\n  {\n    name:'anim',\n    type:'SPINE',\n    src: {\n      ske: {\n        type:'json',\n        url:'https://pages.tmall.com/wow/eva/b5fdf74313d5ff2609ab82f6b6fd83e6.json'\n      },\n      atlas: {\n        type:'atlas',\n        url:'https://pages.tmall.com/wow/eva/b8597f298a5d6fe47095d43ef03210d4.atlas'\n      },\n      image: {\n        type:'png',\n        url:'https://gw.alicdn.com/tfs/TB1YHC8Vxz1gK0jSZSgXXavwpXa-711-711.png'\n      }\n    }\n  }\n])\n\nconst game = new Game({\n  systems: [\n    new RendererSystem({\n      canvas: document.querySelector('#canvas'),\n      width: 750,\n      height: 1000\n    }),\n    new SpineSystem()\n  ],\n  autoStart: true,\n  frameRate: 60\n})\n\ngame.scene.transform.size = {\n  width: 750,\n  height: 1000\n}\nconst gameObject = new GameObject('spine', {\n  anchor: {\n    x: 0.5,\n    y: 0.5\n  },\n  scale: {\n    x: 0.5,\n    y: 0.5\n  }\n})\n\nconst spine = new Spine({ resource:'anim', animationName:'idle' })\n\ngameObject.addComponent(spine)\nspine.on('complete', e => {\n  console.log('Animation playback ended', e.name)\n})\n\nspine.play('idle')\ngame.scene.addChild(gameObject)\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("h3",{id:"resource-string"},"resource ",(0,a.kt)("inlineCode",{parentName:"h3"},"string")),(0,a.kt)("p",null,"Resource Name"),(0,a.kt)("h3",{id:"animationname-string"},"animationName ",(0,a.kt)("inlineCode",{parentName:"h3"},"string")),(0,a.kt)("p",null,"Animation name"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"playname-string-loop-boolean"},"play(name?: string, loop?: boolean)"),(0,a.kt)("p",null,"Play animation"),(0,a.kt)("p",null,"-name action name\n-loop Whether to play in a loop"),(0,a.kt)("h3",{id:"stop"},"stop()"),(0,a.kt)("p",null,"Stop play"))}u.isMDXComponent=!0}}]);